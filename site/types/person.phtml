<!-- person.phtml -->

<?php
$prefixes = '
@prefix cpm: <http://catalogus-professorum.org/cpm/> . \n
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . \n';

/*
$resourceQuery = $prefixes . 'SELECT *
WHERE {
	<' . $this->resourceUri . '> ?p ?resourceUri .
}';
$resource = $this->querylist( $resourceQuery, 'local/items/parseObject.phtml');
$resource = "[" . str_replace('}{', '},{', $resource) . "]";
echo "<pre>";
var_dump( json_decode($resource, true) );
echo "</pre>";
*/
/*
Birth & Death
*/
$birthDeathQuery = $prefixes . 'SELECT *
WHERE {
	<' . $this->resourceUri . '> cpm:has-period ?resourceUri .
	{ ?resourceUri rdf:type cpm:Birth . }
	UNION
	{ ?resourceUri rdf:type cpm:Death . }
	?resourceUri rdf:type ?classTypeof .
	OPTIONAL { ?resourceUri cpm:periodPlace ?periodPlace . }
	OPTIONAL { ?resourceUri cpm:date ?date . }
	OPTIONAL { ?resourceUri cpm:periodNote ?periodNote . }
}';
$birthDeath = $this->querylist( $birthDeathQuery, 'local/items/periodOfLife.phtml');

/*
Family: Parents, Siblings, Spouse, Childs
*/
// old explicite queries
/*$parentsQuery = $prefixes . 'SELECT DISTINCT * WHERE {
	<' . $this->resourceUri . '> cpm:has-period ?familyUri .
	?familyUri cpm:familyParent ?resourceUri .
	FILTER NOT EXISTS { ?familyUri cpm:familyParent <' . $this->resourceUri . '> . } }';
*/
/*$siblingsQuery = $prefixes . 'SELECT DISTINCT * WHERE {
	<' . $this->resourceUri . '> cpm:has-period ?familyUri .
	?familyUri cpm:familyChild ?resourceUri .
	FILTER ( ?resourceUri != <' . $this->resourceUri . '> )
	FILTER EXISTS { ?familyUri cpm:familyChild <' . $this->resourceUri . '> . } }';
*/
/*$spouseQuery = $prefixes . 'SELECT DISTINCT * WHERE {
	<' . $this->resourceUri . '> cpm:has-period ?familyUri .
	?familyUri cpm:familyParent ?resourceUri .
	FILTER ( ?resourceUri != <' . $this->resourceUri . '> )
	FILTER EXISTS { ?familyUri cpm:familyParent <' . $this->resourceUri . '> . } }';
*/
/*$childsQuery = $prefixes . 'SELECT DISTINCT * WHERE {
	<' . $this->resourceUri . '> cpm:has-period ?familyUri .
	?familyUri cpm:familyChild ?resourceUri .
	FILTER EXISTS { ?familyUri cpm:familyParent <' . $this->resourceUri . '> . } }';
*/
	// new implicite queries
$parentsQuery = $prefixes . 'SELECT DISTINCT * WHERE { 
	?familyUri rdf:type cpm:Family ;
		cpm:familyChild ?child ;
		cpm:familyParent ?resourceUri .
	FILTER ( ?child = <'.$this->resourceUri.'> ) }';
$siblingsQuery = $prefixes . 'SELECT DISTINCT * WHERE {
	?familyUri rdf:type cpm:Family ;
		cpm:familyChild ?resourceUri .
	FILTER ( ?resourceUri != <'.$this->resourceUri.'> )
	FILTER EXISTS { ?familyUri cpm:familyChild <' . $this->resourceUri . '> . } }';
$spouseQuery = $prefixes . 'SELECT DISTINCT * WHERE {
	?familyUri rdf:type cpm:Family ;
		cpm:familyParent ?resourceUri .
	FILTER ( ?resourceUri != <'.$this->resourceUri.'> )
	FILTER EXISTS { ?familyUri cpm:familyParent <' . $this->resourceUri . '> . } }';
$childsQuery = $prefixes . 'SELECT DISTINCT * WHERE { 
	?familyUri rdf:type cpm:Family ;
		cpm:familyChild ?resourceUri ;
		cpm:familyParent ?parent .
	FILTER ( ?parent = <'.$this->resourceUri.'> ) }';

$family = array( 
	"parents" 	=> $this->querylist( $parentsQuery, 'local/items/liplain.phtml', array('mode' => 'parents')),
	"siblings"	=> $this->querylist( $siblingsQuery, 'local/items/liplain.phtml', array('mode' => 'siblings')),
	"spouse" 	=> $this->querylist( $spouseQuery, 'local/items/liplain.phtml', array('mode' => 'spouse')),
	"childs" 	=> $this->querylist( $childsQuery, 'local/items/liplain.phtml', array('mode' => 'childs'))
);
$familyLength = 0;
foreach ($family as $k) { $familyLength += strlen($k); }

/*
Periods of Life ()without Birth,Death,Family
*/
$periodQuery = $prefixes . 'SELECT *
WHERE {
	<' . $this->resourceUri . '> cpm:has-period ?resourceUri .
	?resourceUri rdf:type ?classTypeof .
	FILTER NOT EXISTS {  ?resourceUri rdf:type cpm:Birth . }
	FILTER NOT EXISTS {  ?resourceUri rdf:type cpm:Death .  }
	FILTER NOT EXISTS {  ?resourceUri rdf:type cpm:Family .  }
	OPTIONAL { ?resourceUri cpm:periodPlace ?periodPlace . }
	OPTIONAL { ?resourceUri cpm:periodBody ?periodBody . }
	OPTIONAL { ?resourceUri cpm:date ?date . }
	OPTIONAL { ?resourceUri cpm:from ?from . }
	OPTIONAL { ?resourceUri cpm:to ?to . }
	OPTIONAL { ?resourceUri cpm:periodNote ?periodNote . }
	OPTIONAL { 
		?resourceUri cpm:periodDocument ?periodDocument . 
		OPTIONAL {
			?periodDocument rdfs:label ?periodDocumentLabel .
		}
	}
} ORDER BY ASC(?date) ASC(?from)';
$periodObject = $this->querylist($periodQuery, 'local/items/periodOfLife.phtml');
?>

<h2 class=""><?php echo $this->title ?></h2>

<?php 
$denomination = $this->literal(array('property' => 'http://catalogus-professorum.org/cpm/denomination'));
if ( $denomination != "" ) { ?>
	<p>Konfession: <?php echo $denomination; ?></p>
<?php } ?>

<?php if ( $birthDeath != "" ) { ?>
	<div class="period-of-life">
		<h3 class="">Lebensdaten</h3>
		<?php echo $birthDeath; ?>
	</div>
<?php } ?>

<?php if ( $familyLength > 0 ) { ?>
	<div class="period-of-life">
		<h3 class="">Familie</h3>
		<?php // $this->_('family') ?>
		<?php
		echo !empty($family["parents"]) ? "Eltern " . $family["parents"] : "";
		echo !empty($family["siblings"]) ? "Geschwister " . $family["siblings"] : "";
		echo !empty($family["spouse"]) ? "Partner " . $family["spouse"] : "";
		echo !empty($family["childs"]) ? "Kinder " . $family["childs"] : "";
		?>
	</div>
<?php } ?>

<?php if ( $periodObject != "" ) { ?>
	<div class="period-of-life">
		<h3 class="">Lebenslauf</h3>
		<?php echo $periodObject; ?>
	</div>
<?php } ?>

<?php
$furtherProperties = array(
	"Publikationen" => "published",	
	"DNB-Link" => "gnd",
	"Autobiografische Literatur" => "literature",
	"Referenzen und Quellen" => "references",
	"Weblinks" => "webLinks",
	"Weitere Informationen" => "furtherInformation",
	"Anmerkung" => "note",

);

foreach ($furtherProperties as $key => $value) {
	$property = $this->query(array('where' => '<' . $this->resourceUri . '> <http://catalogus-professorum.org/cpm/'.$value.'> ?resourceUri', 'template' => 'liplain'));
	if ( $property != "" ) {
		echo "<h3>".$key."</h3>";
		echo $property;
	}
} ?>